namespace Octokit.GraphQL.Model
{
    using System;
    using System.Collections.Generic;
    using System.Diagnostics.CodeAnalysis;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// Autogenerated return type of UpdateTopics
    /// </summary>
    public class UpdateTopicsPayload : QueryableValue<UpdateTopicsPayload>
    {
        internal UpdateTopicsPayload(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// A unique identifier for the client performing the mutation.
        /// </summary>
        public string ClientMutationId { get; }

        /// <summary>
        /// Names of the provided topics that are not valid.
        /// </summary>
        public IEnumerable<string> InvalidTopicNames { get; }

        /// <summary>
        /// The updated repository.
        /// **Upcoming Change on 2019-01-01 UTC**
        /// **Description:** Type for `repository` will change from `Repository!` to `Repository`.
        /// **Reason:** In preparation for an upcoming change to the way we report mutation errors, non-nullable payload fields are becoming nullable.
        /// </summary>
        public Repository Repository => this.CreateProperty(x => x.Repository, Octokit.GraphQL.Model.Repository.Create);

        internal static UpdateTopicsPayload Create(Expression expression)
        {
            return new UpdateTopicsPayload(expression);
        }
    }
}